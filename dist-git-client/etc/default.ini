# *Match* the given repository clone_url's with an appropriate DistGit
# configuration (== identify the corresponding lookaside cache location).
#
# Any *.ini file in /etc/copr-distgit-client directory is parsed.  The format is
# just INI (python ConfigParser format).  The section names denote the DistGit
# instances' IDs.  Each section can have the following options:
#
# clone_hostnames: List[string]
#       List of possible hostnames to consider when matching this configuration.
#       E.g. "example.com" matches both "git://example.com/foo" and
#       "https://example.com/foo.git" URLs.
#
# path_prefixes: List[string] (optional)
#       List of possible path prefixes to consider.  Complements the
#       "clone_hostnames" option above.  When specified, **both**
#       "clone_hostnames" and 'path_prefixes' must match to use the
#       corresponding configuration section.  E.g. "/foo/bar" prefix matches
#       the "https://example.com/foo/bar/rpms/component.git" clone_url.
#       When not specified, **any** prefix is accepted on matched hostname.
#
# sources_file: String (optional, pathname)
#       Expected 'sources' file location for this DistGit instance (relative to
#       the git root directory).  Defaault = './sources'.
#
# specs: String (optional, pathname)
#       Expected spec file directory, relative to the git root directory.
#       Default = '.' (spec files stored directly in the git root).
#
# sources: String (optional, pathname)
#       Where the source files (referenced by 'sources_file') should be
#       downloaded.  Default = '.' (git root directory).
#
# default_sum: String (capital, optional)
#       Up2date 'sources' files explicitly denote the checksum type used for
#       given files using lines like "SHA512 (<filename>) = <sum>".  But still,
#       even the "old" sources file format is supported with lines like
#       "<filename> <sum>".  This option is to define what sum type is expected
#       in this DistGit instance (Default = MD5).
#
# lookaside_location: String (hostname)
#       Url of the storage where to download the sources from.
#
# lookaside_uri_pattern: String
#       Relative path on the 'lookaside_location' where the files should be
#       found, given the info parsed from 'sources' file.  Possible fields are
#       "name" (component), "filename", "hashtype" (e.g. 'md5'), "hash"
#       (checksum), "namespace" (array, prefix before the component name).

[fedora]
clone_hostnames =
    pkgs.fedoraproject.org
    src.fedoraproject.org
lookaside_location = https://src.fedoraproject.org
lookaside_uri_pattern = repo/pkgs/rpms/{name}/{filename}/{hashtype}/{hash}/{filename}
cloning_pattern = https://src.fedoraproject.org/rpms/{package}.git

[centos]
clone_hostnames = git.centos.org
lookaside_location = https://git.centos.org
sources_file = .{name}.metadata
specs = SPECS
sources = SOURCES
default_sum = SHA1
lookaside_uri_pattern = sources/{name}/{refspec}/{hash}
cloning_pattern = https://git.centos.org/rpms/{package}.git

[fedora-copr]
clone_hostnames = copr-dist-git.fedorainfracloud.org
lookaside_location = https://copr-dist-git.fedorainfracloud.org
lookaside_uri_pattern = repo/pkgs/{namespace[1]}/{namespace[0]}/{name}/{filename}/{hashtype}/{hash}/{filename}
cloning_pattern_package_parts = owner_name project_name package_name
cloning_pattern=https://copr-dist-git.fedorainfracloud.org/git/{package}

[fedora-copr-dev]
clone_hostnames = copr-dist-git-dev.fedorainfracloud.org
lookaside_location = https://copr-dist-git-dev.fedorainfracloud.org
lookaside_uri_pattern = repo/pkgs/{namespace[1]}/{namespace[0]}/{name}/{filename}/{hashtype}/{hash}/{filename}
cloning_pattern_package_parts = owner_name project_name package_name
cloning_pattern=https://copr-dist-git-dev.fedorainfracloud.org/git/{package}

[centos-stream]
clone_hostnames = gitlab.com
path_prefixes = /redhat/centos-stream/rpms
lookaside_location = https://sources.stream.centos.org
lookaside_uri_pattern = sources/rpms/{name}/{filename}/{hashtype}/{hash}/{filename}
cloning_pattern = https://gitlab.com/redhat/centos-stream/rpms/{package}.git
